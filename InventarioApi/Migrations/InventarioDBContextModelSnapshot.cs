// <auto-generated />
using System;
using InventarioApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventarioApi.Migrations
{
    [DbContext(typeof(InventarioDBContext))]
    partial class InventarioDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventarioApi.Entities.Categoria", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("InventarioApi.Entities.Cliente", b =>
                {
                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dpi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nit");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("InventarioApi.Entities.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorCodigoProveedor")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("IdCompra");

                    b.HasIndex("ProveedorCodigoProveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("InventarioApi.Entities.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CodigoProducto")
                        .HasColumnType("int");

                    b.Property<int?>("CompraIdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoCodigoProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("CompraIdCompra");

                    b.HasIndex("ProductoCodigoProducto");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("InventarioApi.Entities.DetalleFactura", b =>
                {
                    b.Property<int>("CodigoDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CodigoProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FacturaNumerofactura")
                        .HasColumnType("int");

                    b.Property<int>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoCodigoProducto")
                        .HasColumnType("int");

                    b.HasKey("CodigoDetalle");

                    b.HasIndex("FacturaNumerofactura");

                    b.HasIndex("ProductoCodigoProducto");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("InventarioApi.Entities.EmailProveedor", b =>
                {
                    b.Property<int>("CodigoEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorCodigoProveedor")
                        .HasColumnType("int");

                    b.HasKey("CodigoEmail");

                    b.HasIndex("ProveedorCodigoProveedor");

                    b.ToTable("EmailProveedor");
                });

            modelBuilder.Entity("InventarioApi.Entities.Emailcliente", b =>
                {
                    b.Property<int>("CodigoEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteNit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoEmail");

                    b.HasIndex("ClienteNit");

                    b.ToTable("Emailclientes");
                });

            modelBuilder.Entity("InventarioApi.Entities.Factura", b =>
                {
                    b.Property<int>("Numerofactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteNit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Numerofactura");

                    b.HasIndex("ClienteNit");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("InventarioApi.Entities.Inventario", b =>
                {
                    b.Property<int>("CodigoInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoProducto")
                        .HasColumnType("int");

                    b.Property<int>("Entradas")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoCodigoProducto")
                        .HasColumnType("int");

                    b.Property<int>("Salidas")
                        .HasColumnType("int");

                    b.Property<string>("TipoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoInventario");

                    b.HasIndex("ProductoCodigoProducto");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("InventarioApi.Entities.Producto", b =>
                {
                    b.Property<int>("CodigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaCodigoCategoria")
                        .HasColumnType("int");

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int");

                    b.Property<int>("CodigoEmpaque")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioPorDocena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioPorMayor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoEmpaqueCodigoEmpaque")
                        .HasColumnType("int");

                    b.HasKey("CodigoProducto");

                    b.HasIndex("CategoriaCodigoCategoria");

                    b.HasIndex("TipoEmpaqueCodigoEmpaque");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("InventarioApi.Entities.Proveedor", b =>
                {
                    b.Property<int>("CodigoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactoPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pagina_Web")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("InventarioApi.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InventarioApi.Entities.TelefonoCliente", b =>
                {
                    b.Property<int>("CodigoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteNit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoTelefono");

                    b.HasIndex("ClienteNit");

                    b.ToTable("TelefonoClientes");
                });

            modelBuilder.Entity("InventarioApi.Entities.TelefonoProveedor", b =>
                {
                    b.Property<int>("CodigoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedoresCodigoProveedor")
                        .HasColumnType("int");

                    b.HasKey("CodigoTelefono");

                    b.HasIndex("ProveedoresCodigoProveedor");

                    b.ToTable("TelefonoProveedores");
                });

            modelBuilder.Entity("InventarioApi.Entities.TipoEmpaque", b =>
                {
                    b.Property<int>("CodigoEmpaque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoEmpaque");

                    b.ToTable("TipoEmpaques");
                });

            modelBuilder.Entity("InventarioApi.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventarioApi.Entities.UserRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID1")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.HasIndex("RoleID1");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("InventarioApi.Entities.Compra", b =>
                {
                    b.HasOne("InventarioApi.Entities.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorCodigoProveedor");
                });

            modelBuilder.Entity("InventarioApi.Entities.DetalleCompra", b =>
                {
                    b.HasOne("InventarioApi.Entities.Compra", "Compra")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("CompraIdCompra");

                    b.HasOne("InventarioApi.Entities.Producto", "Producto")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("ProductoCodigoProducto");
                });

            modelBuilder.Entity("InventarioApi.Entities.DetalleFactura", b =>
                {
                    b.HasOne("InventarioApi.Entities.Factura", "Factura")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("FacturaNumerofactura");

                    b.HasOne("InventarioApi.Entities.Producto", "Producto")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("ProductoCodigoProducto");
                });

            modelBuilder.Entity("InventarioApi.Entities.EmailProveedor", b =>
                {
                    b.HasOne("InventarioApi.Entities.Proveedor", "Proveedor")
                        .WithMany("EmailProveedores")
                        .HasForeignKey("ProveedorCodigoProveedor");
                });

            modelBuilder.Entity("InventarioApi.Entities.Emailcliente", b =>
                {
                    b.HasOne("InventarioApi.Entities.Cliente", "Cliente")
                        .WithMany("Emailclientes")
                        .HasForeignKey("ClienteNit");
                });

            modelBuilder.Entity("InventarioApi.Entities.Factura", b =>
                {
                    b.HasOne("InventarioApi.Entities.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteNit");
                });

            modelBuilder.Entity("InventarioApi.Entities.Inventario", b =>
                {
                    b.HasOne("InventarioApi.Entities.Producto", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductoCodigoProducto");
                });

            modelBuilder.Entity("InventarioApi.Entities.Producto", b =>
                {
                    b.HasOne("InventarioApi.Entities.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaCodigoCategoria");

                    b.HasOne("InventarioApi.Entities.TipoEmpaque", "TipoEmpaque")
                        .WithMany("Productos")
                        .HasForeignKey("TipoEmpaqueCodigoEmpaque");
                });

            modelBuilder.Entity("InventarioApi.Entities.TelefonoCliente", b =>
                {
                    b.HasOne("InventarioApi.Entities.Cliente", "Cliente")
                        .WithMany("TelefonoClientes")
                        .HasForeignKey("ClienteNit");
                });

            modelBuilder.Entity("InventarioApi.Entities.TelefonoProveedor", b =>
                {
                    b.HasOne("InventarioApi.Entities.Proveedor", "Proveedores")
                        .WithMany("TelefonoProveedores")
                        .HasForeignKey("ProveedoresCodigoProveedor");
                });

            modelBuilder.Entity("InventarioApi.Entities.UserRole", b =>
                {
                    b.HasOne("InventarioApi.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventarioApi.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
